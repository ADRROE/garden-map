import type { Metadata } from "next";
import Providers from "../providers";
import "../globals.css";
import { notFound } from 'next/navigation';
import { NextIntlClientProvider } from 'next-intl';
import { error } from "@/utils/utils";
import LoadingOverlayClient from "@/components/LoadingOverlayClient";
import { JSX } from "react";

export const metadata: Metadata = {
  title: "Garden Map",
  description: "Generated by create next app",
};

interface LocaleLayoutProps {
  children: React.ReactNode;
  params:  Promise<{locale: string}>;
}

export default async function LocaleLayout({
  children,
  params
}: LocaleLayoutProps): Promise<JSX.Element> {
  const { locale } = await params;

  let messages;
  try {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    messages = (await import(`../../../messages/${locale}.json`)).default;
  } catch (err) {
    error('Failed to load messages for locale', locale, err);
    notFound();
  }

  return (
    <html lang={locale} className="bg-background text-foreground">
      <body className="font-sans antialiased bg-background text-foreground">
        <NextIntlClientProvider locale={locale} >
          <Providers>
            <LoadingOverlayClient>
            {children}
            </LoadingOverlayClient>
          </Providers>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}